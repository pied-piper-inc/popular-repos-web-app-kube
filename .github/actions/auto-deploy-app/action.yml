name: "Autodeploy Kubernetes App"
description: "Automatically deploy a containerized app to kubernetes"
inputs:
  app-domain:
    required: true
    description: "Domain for app deployment, should be full url"
  image-registry:
    required: false
    default: ghcr.io
  image-name:
    description: "Name of image to deploy"
    required: false
    default: ${{ github.repository }}
  image-tag:
    description: "Image tag to deploy"
    required: true
#  helm-release-name:
#    description: "Stable identifier for the helm release"
#    required: false
  helm-chart:
    description: "Helm chart to use for deployment"
    required: false
    default: nano-byte/generic-service
  kube-config:
    description: "Kubernetes config file"
    required: true
  kube-context:
    description: "Kubernetes context to use defaults to current-context"
    required: false 
  kube-namespace:
    description: "Kubernetes namespace where the app will be deployed"
  
outputs:
  app-url:
    description: "Url of the deployed app"
    value: ${{ steps.deploy-app.outputs.app-url }}
runs:
  using: "composite"
  steps:
    - uses: azure/setup-helm@v1
    - uses: azure/setup-kubectl@v1
    - uses: azure/k8s-set-context@v1
      with:
        method: kubeconfig
        kubeconfig: ${{ inputs.kube-config }} # Use secret (https://developer.github.com/actions/managing-workflows/storing-secrets/)
        context: ${{ inputs.kube-context }}  #If left unspecified, current-context from kubeconfig is used as default
    
    - run: helm repo add nano-byte https://helm.nano-byte.net/
      shell: bash
    - id: deploy-app
      shell: bash
      run: |
        export APP_URL="http://${{ inputs.app-domain }}"
        export KUBE_NAMESPACE=${{ inputs.kube-namespace }}

        export stable_release_name
        if [[ -n "$GITHUB_HEAD_REF" ]]; then
          stable_release_name=${{ github.event.repository.name }}-pr-${{github.event.number}}
        else
          short_ref=${GITHUB_REF#refs/*/}
          stable_release_name=${{ github.event.repository.name }}-$short_ref
        fi
        
        kubectl get namespace "$KUBE_NAMESPACE" || kubectl create namespace "$KUBE_NAMESPACE"
        
        helm upgrade --install --debug --wait \
        --set image.registry="${{ inputs.image-registry }}" \
        --set image.repository="${{ inputs.image-name }}" \
        --set image.tag="${{ inputs.image-tag}}" \
        --set ingress.domains="{${{inputs.app-domain}}}" \
        --set ingress.enabled=true \
        --set ingress.class="nginx" \
        --namespace="$KUBE_NAMESPACE" \
        "$stable_release_name" \
        ${{ inputs.helm-chart }}
        
        echo "App should be running at $APP_URL"
        echo "::set-output name=app-url::$APP_URL"